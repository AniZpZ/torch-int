<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,973,476 us., 33.61%)</title><rect x="311.1" y="117" width="396.5" height="15.0" fill="rgb(236,80,33)" rx="2" ry="2" />
<text  x="314.09" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (116,420 us., 1.98%)</title><rect x="758.3" y="213" width="23.4" height="15.0" fill="rgb(220,224,32)" rx="2" ry="2" />
<text  x="761.34" y="223.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,973,476 us., 33.61%)</title><rect x="311.1" y="181" width="396.5" height="15.0" fill="rgb(245,67,2)" rx="2" ry="2" />
<text  x="314.09" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>all (5,872,564 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(233,5,20)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (499,241 us., 8.50%)</title><rect x="781.7" y="165" width="100.3" height="15.0" fill="rgb(244,98,45)" rx="2" ry="2" />
<text  x="784.74" y="175.5" >torch_int/nn..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (600 us., 0.01%)</title><rect x="1189.9" y="149" width="0.1" height="15.0" fill="rgb(216,133,36)" rx="2" ry="2" />
<text  x="1192.88" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (116,420 us., 1.98%)</title><rect x="758.3" y="245" width="23.4" height="15.0" fill="rgb(244,130,40)" rx="2" ry="2" />
<text  x="761.34" y="255.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (147,164 us., 2.51%)</title><rect x="281.5" y="181" width="29.6" height="15.0" fill="rgb(208,93,38)" rx="2" ry="2" />
<text  x="284.52" y="191.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,881 us., 0.05%)</title><rect x="178.1" y="117" width="0.6" height="15.0" fill="rgb(210,174,23)" rx="2" ry="2" />
<text  x="181.10" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (600 us., 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(211,191,12)" rx="2" ry="2" />
<text  x="1192.88" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (626,668 us., 10.67%)</title><rect x="52.2" y="149" width="125.9" height="15.0" fill="rgb(249,147,3)" rx="2" ry="2" />
<text  x="55.18" y="159.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,792 us., 0.03%)</title><rect x="707.9" y="149" width="0.4" height="15.0" fill="rgb(225,116,11)" rx="2" ry="2" />
<text  x="710.95" y="159.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (626,668 us., 10.67%)</title><rect x="52.2" y="245" width="125.9" height="15.0" fill="rgb(249,101,7)" rx="2" ry="2" />
<text  x="55.18" y="255.5" >torch_int/funct..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f332ddf4f00&gt; (116,780 us., 1.99%)</title><rect x="734.9" y="261" width="23.4" height="15.0" fill="rgb(218,205,4)" rx="2" ry="2" />
<text  x="737.88" y="271.5" >&lt;..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (626,668 us., 10.67%)</title><rect x="52.2" y="165" width="125.9" height="15.0" fill="rgb(250,200,29)" rx="2" ry="2" />
<text  x="55.18" y="175.5" >torch_int/nn/op..</text>
</g>
<g >
<title>nn.Module:_Linear (206,462 us., 3.52%)</title><rect x="10.0" y="229" width="41.5" height="15.0" fill="rgb(229,145,7)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn...</text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (116,780 us., 1.99%)</title><rect x="734.9" y="245" width="23.4" height="15.0" fill="rgb(254,29,40)" rx="2" ry="2" />
<text  x="737.88" y="255.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,100 us., 0.04%)</title><rect x="280.0" y="229" width="0.4" height="15.0" fill="rgb(232,56,32)" rx="2" ry="2" />
<text  x="282.96" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (116,420 us., 1.98%)</title><rect x="758.3" y="197" width="23.4" height="15.0" fill="rgb(215,69,46)" rx="2" ry="2" />
<text  x="761.34" y="207.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (626,668 us., 10.67%)</title><rect x="52.2" y="133" width="125.9" height="15.0" fill="rgb(210,138,51)" rx="2" ry="2" />
<text  x="55.18" y="143.5" >transformers/mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (116,420 us., 1.98%)</title><rect x="758.3" y="85" width="23.4" height="15.0" fill="rgb(205,19,47)" rx="2" ry="2" />
<text  x="761.34" y="95.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (116,420 us., 1.98%)</title><rect x="758.3" y="181" width="23.4" height="15.0" fill="rgb(220,53,50)" rx="2" ry="2" />
<text  x="761.34" y="191.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (147,164 us., 2.51%)</title><rect x="281.5" y="85" width="29.6" height="15.0" fill="rgb(228,30,35)" rx="2" ry="2" />
<text  x="284.52" y="95.5" >pr..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,526,231 us., 25.99%)</title><rect x="883.2" y="117" width="306.7" height="15.0" fill="rgb(217,70,48)" rx="2" ry="2" />
<text  x="886.21" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (499,241 us., 8.50%)</title><rect x="781.7" y="101" width="100.3" height="15.0" fill="rgb(216,223,44)" rx="2" ry="2" />
<text  x="784.74" y="111.5" >profiling/ut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (499,241 us., 8.50%)</title><rect x="781.7" y="149" width="100.3" height="15.0" fill="rgb(240,66,11)" rx="2" ry="2" />
<text  x="784.74" y="159.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (116,780 us., 1.99%)</title><rect x="734.9" y="149" width="23.4" height="15.0" fill="rgb(217,45,10)" rx="2" ry="2" />
<text  x="737.88" y="159.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (116,780 us., 1.99%)</title><rect x="734.9" y="85" width="23.4" height="15.0" fill="rgb(244,164,36)" rx="2" ry="2" />
<text  x="737.88" y="95.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f332e4564b0&gt; (2,631,298 us., 44.81%)</title><rect x="179.2" y="261" width="528.7" height="15.0" fill="rgb(206,90,35)" rx="2" ry="2" />
<text  x="182.23" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f332e4564b0&gt;</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (116,780 us., 1.99%)</title><rect x="734.9" y="181" width="23.4" height="15.0" fill="rgb(232,135,29)" rx="2" ry="2" />
<text  x="737.88" y="191.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (499,241 us., 8.50%)</title><rect x="781.7" y="213" width="100.3" height="15.0" fill="rgb(222,210,49)" rx="2" ry="2" />
<text  x="784.74" y="223.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (206,462 us., 3.52%)</title><rect x="10.0" y="165" width="41.5" height="15.0" fill="rgb(235,209,7)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,100 us., 0.04%)</title><rect x="280.0" y="213" width="0.4" height="15.0" fill="rgb(213,90,33)" rx="2" ry="2" />
<text  x="282.96" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (798 us., 0.01%)</title><rect x="882.1" y="245" width="0.2" height="15.0" fill="rgb(233,25,18)" rx="2" ry="2" />
<text  x="885.13" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,701 us., 0.10%)</title><rect x="280.4" y="197" width="1.1" height="15.0" fill="rgb(221,164,45)" rx="2" ry="2" />
<text  x="283.38" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (2,767 us., 0.05%)</title><rect x="178.7" y="213" width="0.5" height="15.0" fill="rgb(251,1,35)" rx="2" ry="2" />
<text  x="181.67" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (147,164 us., 2.51%)</title><rect x="281.5" y="133" width="29.6" height="15.0" fill="rgb(242,224,30)" rx="2" ry="2" />
<text  x="284.52" y="143.5" >nn..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f332ddf4ed0&gt; (132,227 us., 2.25%)</title><rect x="708.3" y="261" width="26.6" height="15.0" fill="rgb(245,31,2)" rx="2" ry="2" />
<text  x="711.31" y="271.5" >&lt;..</text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f34229619c0&gt; (3,115 us., 0.05%)</title><rect x="51.5" y="261" width="0.6" height="15.0" fill="rgb(208,26,18)" rx="2" ry="2" />
<text  x="54.49" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (147,164 us., 2.51%)</title><rect x="281.5" y="165" width="29.6" height="15.0" fill="rgb(216,188,5)" rx="2" ry="2" />
<text  x="284.52" y="175.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (66,518 us., 1.13%)</title><rect x="708.3" y="101" width="13.4" height="15.0" fill="rgb(236,134,6)" rx="2" ry="2" />
<text  x="711.31" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,701 us., 0.10%)</title><rect x="280.4" y="229" width="1.1" height="15.0" fill="rgb(225,60,21)" rx="2" ry="2" />
<text  x="283.38" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (132,227 us., 2.25%)</title><rect x="708.3" y="229" width="26.6" height="15.0" fill="rgb(248,181,38)" rx="2" ry="2" />
<text  x="711.31" y="239.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,792 us., 0.03%)</title><rect x="707.9" y="197" width="0.4" height="15.0" fill="rgb(229,183,0)" rx="2" ry="2" />
<text  x="710.95" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (65,709 us., 1.12%)</title><rect x="721.7" y="133" width="13.2" height="15.0" fill="rgb(213,50,46)" rx="2" ry="2" />
<text  x="724.67" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,526,231 us., 25.99%)</title><rect x="883.2" y="197" width="306.7" height="15.0" fill="rgb(243,86,35)" rx="2" ry="2" />
<text  x="886.21" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (65,709 us., 1.12%)</title><rect x="721.7" y="149" width="13.2" height="15.0" fill="rgb(228,180,47)" rx="2" ry="2" />
<text  x="724.67" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (65,709 us., 1.12%)</title><rect x="721.7" y="85" width="13.2" height="15.0" fill="rgb(252,32,18)" rx="2" ry="2" />
<text  x="724.67" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (499,241 us., 8.50%)</title><rect x="781.7" y="229" width="100.3" height="15.0" fill="rgb(240,60,20)" rx="2" ry="2" />
<text  x="784.74" y="239.5" >torch/autogr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (501,290 us., 8.54%)</title><rect x="179.2" y="197" width="100.8" height="15.0" fill="rgb(241,199,36)" rx="2" ry="2" />
<text  x="182.23" y="207.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (499,241 us., 8.50%)</title><rect x="781.7" y="181" width="100.3" height="15.0" fill="rgb(220,226,3)" rx="2" ry="2" />
<text  x="784.74" y="191.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (798 us., 0.01%)</title><rect x="882.1" y="165" width="0.2" height="15.0" fill="rgb(213,60,38)" rx="2" ry="2" />
<text  x="885.13" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (66,518 us., 1.13%)</title><rect x="708.3" y="197" width="13.4" height="15.0" fill="rgb(250,11,50)" rx="2" ry="2" />
<text  x="711.31" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (116,780 us., 1.99%)</title><rect x="734.9" y="213" width="23.4" height="15.0" fill="rgb(216,28,24)" rx="2" ry="2" />
<text  x="737.88" y="223.5" >n..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f34229619c0&gt; (5,648 us., 0.10%)</title><rect x="178.1" y="261" width="1.1" height="15.0" fill="rgb(251,203,36)" rx="2" ry="2" />
<text  x="181.10" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,701 us., 0.10%)</title><rect x="280.4" y="165" width="1.1" height="15.0" fill="rgb(230,149,51)" rx="2" ry="2" />
<text  x="283.38" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (501,290 us., 8.54%)</title><rect x="179.2" y="69" width="100.8" height="15.0" fill="rgb(206,152,42)" rx="2" ry="2" />
<text  x="182.23" y="79.5" >torch/autogr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,973,476 us., 33.61%)</title><rect x="311.1" y="149" width="396.5" height="15.0" fill="rgb(244,63,15)" rx="2" ry="2" />
<text  x="314.09" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,526,231 us., 25.99%)</title><rect x="883.2" y="229" width="306.7" height="15.0" fill="rgb(241,179,49)" rx="2" ry="2" />
<text  x="886.21" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (499,241 us., 8.50%)</title><rect x="781.7" y="117" width="100.3" height="15.0" fill="rgb(209,217,12)" rx="2" ry="2" />
<text  x="784.74" y="127.5" >nn.Module:_I..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (206,462 us., 3.52%)</title><rect x="10.0" y="261" width="41.5" height="15.0" fill="rgb(246,181,42)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (600 us., 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(212,208,29)" rx="2" ry="2" />
<text  x="1192.88" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f332ddf4f30&gt; (626,668 us., 10.67%)</title><rect x="52.2" y="261" width="125.9" height="15.0" fill="rgb(225,127,37)" rx="2" ry="2" />
<text  x="55.18" y="271.5" >&lt;built-in_metho..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,115 us., 0.05%)</title><rect x="51.5" y="165" width="0.6" height="15.0" fill="rgb(224,189,28)" rx="2" ry="2" />
<text  x="54.49" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,792 us., 0.03%)</title><rect x="707.9" y="165" width="0.4" height="15.0" fill="rgb(252,125,14)" rx="2" ry="2" />
<text  x="710.95" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,881 us., 0.05%)</title><rect x="178.1" y="181" width="0.6" height="15.0" fill="rgb(215,7,3)" rx="2" ry="2" />
<text  x="181.10" y="191.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (1,792 us., 0.03%)</title><rect x="707.9" y="245" width="0.4" height="15.0" fill="rgb(213,166,17)" rx="2" ry="2" />
<text  x="710.95" y="255.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (206,462 us., 3.52%)</title><rect x="10.0" y="245" width="41.5" height="15.0" fill="rgb(212,155,12)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >tor..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,792 us., 0.03%)</title><rect x="707.9" y="229" width="0.4" height="15.0" fill="rgb(244,217,7)" rx="2" ry="2" />
<text  x="710.95" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (501,290 us., 8.54%)</title><rect x="179.2" y="85" width="100.8" height="15.0" fill="rgb(252,65,0)" rx="2" ry="2" />
<text  x="182.23" y="95.5" >profiling/ut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,792 us., 0.03%)</title><rect x="707.9" y="181" width="0.4" height="15.0" fill="rgb(219,156,28)" rx="2" ry="2" />
<text  x="710.95" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (116,420 us., 1.98%)</title><rect x="758.3" y="165" width="23.4" height="15.0" fill="rgb(222,124,51)" rx="2" ry="2" />
<text  x="761.34" y="175.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (66,518 us., 1.13%)</title><rect x="708.3" y="85" width="13.4" height="15.0" fill="rgb(240,150,27)" rx="2" ry="2" />
<text  x="711.31" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (116,780 us., 1.99%)</title><rect x="734.9" y="101" width="23.4" height="15.0" fill="rgb(252,169,29)" rx="2" ry="2" />
<text  x="737.88" y="111.5" >n..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (626,668 us., 10.67%)</title><rect x="52.2" y="229" width="125.9" height="15.0" fill="rgb(242,205,1)" rx="2" ry="2" />
<text  x="55.18" y="239.5" >torch_int/nn/fu..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (116,780 us., 1.99%)</title><rect x="734.9" y="197" width="23.4" height="15.0" fill="rgb(235,139,51)" rx="2" ry="2" />
<text  x="737.88" y="207.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (499,241 us., 8.50%)</title><rect x="781.7" y="197" width="100.3" height="15.0" fill="rgb(232,198,15)" rx="2" ry="2" />
<text  x="784.74" y="207.5" >torch_int/nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,290 us., 0.07%)</title><rect x="882.3" y="229" width="0.9" height="15.0" fill="rgb(244,67,46)" rx="2" ry="2" />
<text  x="885.35" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,261 us., 0.02%)</title><rect x="707.7" y="133" width="0.2" height="15.0" fill="rgb(227,75,2)" rx="2" ry="2" />
<text  x="710.69" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (116,420 us., 1.98%)</title><rect x="758.3" y="101" width="23.4" height="15.0" fill="rgb(220,141,26)" rx="2" ry="2" />
<text  x="761.34" y="111.5" >p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (600 us., 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(230,77,50)" rx="2" ry="2" />
<text  x="1192.88" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (66,518 us., 1.13%)</title><rect x="708.3" y="117" width="13.4" height="15.0" fill="rgb(250,136,40)" rx="2" ry="2" />
<text  x="711.31" y="127.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (5,648 us., 0.10%)</title><rect x="178.1" y="245" width="1.1" height="15.0" fill="rgb(211,105,28)" rx="2" ry="2" />
<text  x="181.10" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f332ddf4e70&gt; (116,420 us., 1.98%)</title><rect x="758.3" y="261" width="23.4" height="15.0" fill="rgb(216,195,22)" rx="2" ry="2" />
<text  x="761.34" y="271.5" >&lt;..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,526,231 us., 25.99%)</title><rect x="883.2" y="261" width="306.7" height="15.0" fill="rgb(245,177,4)" rx="2" ry="2" />
<text  x="886.21" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (626,668 us., 10.67%)</title><rect x="52.2" y="101" width="125.9" height="15.0" fill="rgb(237,85,34)" rx="2" ry="2" />
<text  x="55.18" y="111.5" >profiling/utils..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,526,231 us., 25.99%)</title><rect x="883.2" y="101" width="306.7" height="15.0" fill="rgb(252,149,20)" rx="2" ry="2" />
<text  x="886.21" y="111.5" >torch/autograd/grad_mode.py(27):_decorate..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,767 us., 0.05%)</title><rect x="178.7" y="165" width="0.5" height="15.0" fill="rgb(216,171,34)" rx="2" ry="2" />
<text  x="181.67" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (206,462 us., 3.52%)</title><rect x="10.0" y="197" width="41.5" height="15.0" fill="rgb(227,118,45)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,767 us., 0.05%)</title><rect x="178.7" y="149" width="0.5" height="15.0" fill="rgb(211,100,42)" rx="2" ry="2" />
<text  x="181.67" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,290 us., 0.07%)</title><rect x="882.3" y="261" width="0.9" height="15.0" fill="rgb(243,229,52)" rx="2" ry="2" />
<text  x="885.35" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,973,476 us., 33.61%)</title><rect x="311.1" y="213" width="396.5" height="15.0" fill="rgb(229,222,49)" rx="2" ry="2" />
<text  x="314.09" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,701 us., 0.10%)</title><rect x="280.4" y="213" width="1.1" height="15.0" fill="rgb(210,58,20)" rx="2" ry="2" />
<text  x="283.38" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (116,780 us., 1.99%)</title><rect x="734.9" y="229" width="23.4" height="15.0" fill="rgb(245,24,0)" rx="2" ry="2" />
<text  x="737.88" y="239.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,881 us., 0.05%)</title><rect x="178.1" y="197" width="0.6" height="15.0" fill="rgb(248,168,34)" rx="2" ry="2" />
<text  x="181.10" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (499,241 us., 8.50%)</title><rect x="781.7" y="245" width="100.3" height="15.0" fill="rgb(236,175,19)" rx="2" ry="2" />
<text  x="784.74" y="255.5" >torch_int/nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (147,164 us., 2.51%)</title><rect x="281.5" y="117" width="29.6" height="15.0" fill="rgb(243,172,8)" rx="2" ry="2" />
<text  x="284.52" y="127.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (600 us., 0.01%)</title><rect x="1189.9" y="197" width="0.1" height="15.0" fill="rgb(241,100,47)" rx="2" ry="2" />
<text  x="1192.88" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,261 us., 0.02%)</title><rect x="707.7" y="197" width="0.2" height="15.0" fill="rgb(212,75,17)" rx="2" ry="2" />
<text  x="710.69" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (65,709 us., 1.12%)</title><rect x="721.7" y="53" width="13.2" height="15.0" fill="rgb(249,17,50)" rx="2" ry="2" />
<text  x="724.67" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,290 us., 0.07%)</title><rect x="882.3" y="245" width="0.9" height="15.0" fill="rgb(251,89,6)" rx="2" ry="2" />
<text  x="885.35" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,100 us., 0.04%)</title><rect x="280.0" y="165" width="0.4" height="15.0" fill="rgb(243,70,39)" rx="2" ry="2" />
<text  x="282.96" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,973,476 us., 33.61%)</title><rect x="311.1" y="197" width="396.5" height="15.0" fill="rgb(213,171,43)" rx="2" ry="2" />
<text  x="314.09" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (116,420 us., 1.98%)</title><rect x="758.3" y="149" width="23.4" height="15.0" fill="rgb(245,0,5)" rx="2" ry="2" />
<text  x="761.34" y="159.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (2,100 us., 0.04%)</title><rect x="280.0" y="245" width="0.4" height="15.0" fill="rgb(211,57,16)" rx="2" ry="2" />
<text  x="282.96" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (65,709 us., 1.12%)</title><rect x="721.7" y="37" width="13.2" height="15.0" fill="rgb(252,193,36)" rx="2" ry="2" />
<text  x="724.67" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (66,518 us., 1.13%)</title><rect x="708.3" y="149" width="13.4" height="15.0" fill="rgb(225,124,34)" rx="2" ry="2" />
<text  x="711.31" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,792 us., 0.03%)</title><rect x="707.9" y="133" width="0.4" height="15.0" fill="rgb(230,165,21)" rx="2" ry="2" />
<text  x="710.95" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (116,780 us., 1.99%)</title><rect x="734.9" y="69" width="23.4" height="15.0" fill="rgb(247,127,35)" rx="2" ry="2" />
<text  x="737.88" y="79.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (65,709 us., 1.12%)</title><rect x="721.7" y="181" width="13.2" height="15.0" fill="rgb(235,38,23)" rx="2" ry="2" />
<text  x="724.67" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (600 us., 0.01%)</title><rect x="1189.9" y="165" width="0.1" height="15.0" fill="rgb(236,132,33)" rx="2" ry="2" />
<text  x="1192.88" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (499,241 us., 8.50%)</title><rect x="781.7" y="85" width="100.3" height="15.0" fill="rgb(248,182,0)" rx="2" ry="2" />
<text  x="784.74" y="95.5" >torch/autogr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,261 us., 0.02%)</title><rect x="707.7" y="229" width="0.2" height="15.0" fill="rgb(226,124,43)" rx="2" ry="2" />
<text  x="710.69" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (116,780 us., 1.99%)</title><rect x="734.9" y="165" width="23.4" height="15.0" fill="rgb(237,163,3)" rx="2" ry="2" />
<text  x="737.88" y="175.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,881 us., 0.05%)</title><rect x="178.1" y="165" width="0.6" height="15.0" fill="rgb(252,218,1)" rx="2" ry="2" />
<text  x="181.10" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,767 us., 0.05%)</title><rect x="178.7" y="101" width="0.5" height="15.0" fill="rgb(236,217,19)" rx="2" ry="2" />
<text  x="181.67" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (501,290 us., 8.54%)</title><rect x="179.2" y="181" width="100.8" height="15.0" fill="rgb(234,146,50)" rx="2" ry="2" />
<text  x="182.23" y="191.5" >torch_int/nn..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (2,767 us., 0.05%)</title><rect x="178.7" y="197" width="0.5" height="15.0" fill="rgb(243,161,41)" rx="2" ry="2" />
<text  x="181.67" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,261 us., 0.02%)</title><rect x="707.7" y="149" width="0.2" height="15.0" fill="rgb(227,219,6)" rx="2" ry="2" />
<text  x="710.69" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (65,709 us., 1.12%)</title><rect x="721.7" y="165" width="13.2" height="15.0" fill="rgb(215,131,47)" rx="2" ry="2" />
<text  x="724.67" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,526,231 us., 25.99%)</title><rect x="883.2" y="149" width="306.7" height="15.0" fill="rgb(219,19,4)" rx="2" ry="2" />
<text  x="886.21" y="159.5" >transformers/models/opt/modeling_opt.py(8..</text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (132,227 us., 2.25%)</title><rect x="708.3" y="213" width="26.6" height="15.0" fill="rgb(254,229,10)" rx="2" ry="2" />
<text  x="711.31" y="223.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,767 us., 0.05%)</title><rect x="178.7" y="133" width="0.5" height="15.0" fill="rgb(240,106,19)" rx="2" ry="2" />
<text  x="181.67" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,261 us., 0.02%)</title><rect x="707.7" y="213" width="0.2" height="15.0" fill="rgb(231,10,22)" rx="2" ry="2" />
<text  x="710.69" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (798 us., 0.01%)</title><rect x="882.1" y="229" width="0.2" height="15.0" fill="rgb(245,132,47)" rx="2" ry="2" />
<text  x="885.13" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (65,709 us., 1.12%)</title><rect x="721.7" y="197" width="13.2" height="15.0" fill="rgb(216,228,31)" rx="2" ry="2" />
<text  x="724.67" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (116,780 us., 1.99%)</title><rect x="734.9" y="117" width="23.4" height="15.0" fill="rgb(254,194,19)" rx="2" ry="2" />
<text  x="737.88" y="127.5" >t..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (5,648 us., 0.10%)</title><rect x="178.1" y="229" width="1.1" height="15.0" fill="rgb(232,7,4)" rx="2" ry="2" />
<text  x="181.10" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,973,476 us., 33.61%)</title><rect x="311.1" y="85" width="396.5" height="15.0" fill="rgb(248,111,18)" rx="2" ry="2" />
<text  x="314.09" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (147,164 us., 2.51%)</title><rect x="281.5" y="197" width="29.6" height="15.0" fill="rgb(245,8,36)" rx="2" ry="2" />
<text  x="284.52" y="207.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (501,290 us., 8.54%)</title><rect x="179.2" y="101" width="100.8" height="15.0" fill="rgb(237,212,48)" rx="2" ry="2" />
<text  x="182.23" y="111.5" >nn.Module:_I..</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f34229619c0&gt; (499,241 us., 8.50%)</title><rect x="781.7" y="261" width="100.3" height="15.0" fill="rgb(229,76,32)" rx="2" ry="2" />
<text  x="784.74" y="271.5" >&lt;built-in_me..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (501,290 us., 8.54%)</title><rect x="179.2" y="165" width="100.8" height="15.0" fill="rgb(236,67,51)" rx="2" ry="2" />
<text  x="182.23" y="175.5" >nn.Module:_I..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,973,476 us., 33.61%)</title><rect x="311.1" y="101" width="396.5" height="15.0" fill="rgb(206,78,50)" rx="2" ry="2" />
<text  x="314.09" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (501,290 us., 8.54%)</title><rect x="179.2" y="229" width="100.8" height="15.0" fill="rgb(231,150,17)" rx="2" ry="2" />
<text  x="182.23" y="239.5" >torch_int/nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (147,164 us., 2.51%)</title><rect x="281.5" y="149" width="29.6" height="15.0" fill="rgb(214,213,22)" rx="2" ry="2" />
<text  x="284.52" y="159.5" >to..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,701 us., 0.10%)</title><rect x="280.4" y="181" width="1.1" height="15.0" fill="rgb(231,195,50)" rx="2" ry="2" />
<text  x="283.38" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (132,227 us., 2.25%)</title><rect x="708.3" y="245" width="26.6" height="15.0" fill="rgb(245,34,34)" rx="2" ry="2" />
<text  x="711.31" y="255.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,792 us., 0.03%)</title><rect x="707.9" y="117" width="0.4" height="15.0" fill="rgb(208,159,2)" rx="2" ry="2" />
<text  x="710.95" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (501,290 us., 8.54%)</title><rect x="179.2" y="133" width="100.8" height="15.0" fill="rgb(242,46,29)" rx="2" ry="2" />
<text  x="182.23" y="143.5" >nn.Module:_I..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,881 us., 0.05%)</title><rect x="178.1" y="133" width="0.6" height="15.0" fill="rgb(247,185,34)" rx="2" ry="2" />
<text  x="181.10" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (626,668 us., 10.67%)</title><rect x="52.2" y="85" width="125.9" height="15.0" fill="rgb(240,31,12)" rx="2" ry="2" />
<text  x="55.18" y="95.5" >torch/autograd/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (206,462 us., 3.52%)</title><rect x="10.0" y="181" width="41.5" height="15.0" fill="rgb(215,103,26)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >pro..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,767 us., 0.05%)</title><rect x="178.7" y="181" width="0.5" height="15.0" fill="rgb(236,165,19)" rx="2" ry="2" />
<text  x="181.67" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (600 us., 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(245,170,16)" rx="2" ry="2" />
<text  x="1192.88" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,290 us., 0.07%)</title><rect x="882.3" y="213" width="0.9" height="15.0" fill="rgb(235,206,0)" rx="2" ry="2" />
<text  x="885.35" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (66,518 us., 1.13%)</title><rect x="708.3" y="181" width="13.4" height="15.0" fill="rgb(247,152,10)" rx="2" ry="2" />
<text  x="711.31" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,973,476 us., 33.61%)</title><rect x="311.1" y="245" width="396.5" height="15.0" fill="rgb(231,35,1)" rx="2" ry="2" />
<text  x="314.09" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (65,709 us., 1.12%)</title><rect x="721.7" y="117" width="13.2" height="15.0" fill="rgb(245,164,45)" rx="2" ry="2" />
<text  x="724.67" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (798 us., 0.01%)</title><rect x="882.1" y="197" width="0.2" height="15.0" fill="rgb(206,208,30)" rx="2" ry="2" />
<text  x="885.13" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,526,231 us., 25.99%)</title><rect x="883.2" y="181" width="306.7" height="15.0" fill="rgb(242,38,46)" rx="2" ry="2" />
<text  x="886.21" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (147,164 us., 2.51%)</title><rect x="281.5" y="69" width="29.6" height="15.0" fill="rgb(252,26,45)" rx="2" ry="2" />
<text  x="284.52" y="79.5" >to..</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (626,668 us., 10.67%)</title><rect x="52.2" y="213" width="125.9" height="15.0" fill="rgb(224,100,15)" rx="2" ry="2" />
<text  x="55.18" y="223.5" >nn.Module:_DQ_A..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (116,780 us., 1.99%)</title><rect x="734.9" y="133" width="23.4" height="15.0" fill="rgb(242,107,17)" rx="2" ry="2" />
<text  x="737.88" y="143.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,115 us., 0.05%)</title><rect x="51.5" y="245" width="0.6" height="15.0" fill="rgb(221,136,18)" rx="2" ry="2" />
<text  x="54.49" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (147,164 us., 2.51%)</title><rect x="281.5" y="213" width="29.6" height="15.0" fill="rgb(214,28,11)" rx="2" ry="2" />
<text  x="284.52" y="223.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (116,420 us., 1.98%)</title><rect x="758.3" y="117" width="23.4" height="15.0" fill="rgb(245,132,9)" rx="2" ry="2" />
<text  x="761.34" y="127.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (116,420 us., 1.98%)</title><rect x="758.3" y="133" width="23.4" height="15.0" fill="rgb(254,174,36)" rx="2" ry="2" />
<text  x="761.34" y="143.5" >t..</text>
</g>
<g >
<title>nn.Module:_Embedding (2,881 us., 0.05%)</title><rect x="178.1" y="213" width="0.6" height="15.0" fill="rgb(253,80,22)" rx="2" ry="2" />
<text  x="181.10" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,767 us., 0.05%)</title><rect x="178.7" y="117" width="0.5" height="15.0" fill="rgb(232,207,41)" rx="2" ry="2" />
<text  x="181.67" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,973,476 us., 33.61%)</title><rect x="311.1" y="133" width="396.5" height="15.0" fill="rgb(244,142,40)" rx="2" ry="2" />
<text  x="314.09" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,792 us., 0.03%)</title><rect x="707.9" y="213" width="0.4" height="15.0" fill="rgb(224,133,5)" rx="2" ry="2" />
<text  x="710.95" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,115 us., 0.05%)</title><rect x="51.5" y="197" width="0.6" height="15.0" fill="rgb(227,128,53)" rx="2" ry="2" />
<text  x="54.49" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,290 us., 0.07%)</title><rect x="882.3" y="181" width="0.9" height="15.0" fill="rgb(216,121,27)" rx="2" ry="2" />
<text  x="885.35" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,115 us., 0.05%)</title><rect x="51.5" y="229" width="0.6" height="15.0" fill="rgb(242,106,47)" rx="2" ry="2" />
<text  x="54.49" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,100 us., 0.04%)</title><rect x="280.0" y="197" width="0.4" height="15.0" fill="rgb(246,138,31)" rx="2" ry="2" />
<text  x="282.96" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (65,709 us., 1.12%)</title><rect x="721.7" y="101" width="13.2" height="15.0" fill="rgb(232,155,37)" rx="2" ry="2" />
<text  x="724.67" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,881 us., 0.05%)</title><rect x="178.1" y="149" width="0.6" height="15.0" fill="rgb(222,220,8)" rx="2" ry="2" />
<text  x="181.10" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (626,668 us., 10.67%)</title><rect x="52.2" y="117" width="125.9" height="15.0" fill="rgb(249,63,27)" rx="2" ry="2" />
<text  x="55.18" y="127.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (5,701 us., 0.10%)</title><rect x="280.4" y="245" width="1.1" height="15.0" fill="rgb(213,100,36)" rx="2" ry="2" />
<text  x="283.38" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,526,231 us., 25.99%)</title><rect x="883.2" y="133" width="306.7" height="15.0" fill="rgb(234,198,40)" rx="2" ry="2" />
<text  x="886.21" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,261 us., 0.02%)</title><rect x="707.7" y="165" width="0.2" height="15.0" fill="rgb(222,193,12)" rx="2" ry="2" />
<text  x="710.69" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (600 us., 0.01%)</title><rect x="1189.9" y="181" width="0.1" height="15.0" fill="rgb(209,171,44)" rx="2" ry="2" />
<text  x="1192.88" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (501,290 us., 8.54%)</title><rect x="179.2" y="117" width="100.8" height="15.0" fill="rgb(211,38,18)" rx="2" ry="2" />
<text  x="182.23" y="127.5" >transformers..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,100 us., 0.04%)</title><rect x="280.0" y="149" width="0.4" height="15.0" fill="rgb(206,223,20)" rx="2" ry="2" />
<text  x="282.96" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,526,231 us., 25.99%)</title><rect x="883.2" y="165" width="306.7" height="15.0" fill="rgb(216,75,13)" rx="2" ry="2" />
<text  x="886.21" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f34229619c0&gt; (1,792 us., 0.03%)</title><rect x="707.9" y="261" width="0.4" height="15.0" fill="rgb(210,93,13)" rx="2" ry="2" />
<text  x="710.95" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,115 us., 0.05%)</title><rect x="51.5" y="213" width="0.6" height="15.0" fill="rgb(218,110,20)" rx="2" ry="2" />
<text  x="54.49" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,526,231 us., 25.99%)</title><rect x="883.2" y="245" width="306.7" height="15.0" fill="rgb(206,147,51)" rx="2" ry="2" />
<text  x="886.21" y="255.5" >torch/autograd/grad_mode.py(24):_decorate..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,100 us., 0.04%)</title><rect x="280.0" y="181" width="0.4" height="15.0" fill="rgb(251,47,3)" rx="2" ry="2" />
<text  x="282.96" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,261 us., 0.02%)</title><rect x="707.7" y="245" width="0.2" height="15.0" fill="rgb(213,84,19)" rx="2" ry="2" />
<text  x="710.69" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (66,518 us., 1.13%)</title><rect x="708.3" y="165" width="13.4" height="15.0" fill="rgb(212,78,30)" rx="2" ry="2" />
<text  x="711.31" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,115 us., 0.05%)</title><rect x="51.5" y="181" width="0.6" height="15.0" fill="rgb(248,40,13)" rx="2" ry="2" />
<text  x="54.49" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (66,518 us., 1.13%)</title><rect x="708.3" y="133" width="13.4" height="15.0" fill="rgb(244,126,36)" rx="2" ry="2" />
<text  x="711.31" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,261 us., 0.02%)</title><rect x="707.7" y="181" width="0.2" height="15.0" fill="rgb(227,63,9)" rx="2" ry="2" />
<text  x="710.69" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (501,290 us., 8.54%)</title><rect x="179.2" y="149" width="100.8" height="15.0" fill="rgb(238,184,9)" rx="2" ry="2" />
<text  x="182.23" y="159.5" >torch_int/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (65,709 us., 1.12%)</title><rect x="721.7" y="69" width="13.2" height="15.0" fill="rgb(226,196,41)" rx="2" ry="2" />
<text  x="724.67" y="79.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (626,668 us., 10.67%)</title><rect x="52.2" y="197" width="125.9" height="15.0" fill="rgb(215,167,49)" rx="2" ry="2" />
<text  x="55.18" y="207.5" >torch_int/nn/op..</text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (147,164 us., 2.51%)</title><rect x="281.5" y="245" width="29.6" height="15.0" fill="rgb(239,19,48)" rx="2" ry="2" />
<text  x="284.52" y="255.5" >to..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (116,780 us., 1.99%)</title><rect x="734.9" y="53" width="23.4" height="15.0" fill="rgb(218,46,16)" rx="2" ry="2" />
<text  x="737.88" y="63.5" >p..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (116,420 us., 1.98%)</title><rect x="758.3" y="229" width="23.4" height="15.0" fill="rgb(221,13,52)" rx="2" ry="2" />
<text  x="761.34" y="239.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,973,476 us., 33.61%)</title><rect x="311.1" y="229" width="396.5" height="15.0" fill="rgb(248,221,2)" rx="2" ry="2" />
<text  x="314.09" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,290 us., 0.07%)</title><rect x="882.3" y="197" width="0.9" height="15.0" fill="rgb(219,56,17)" rx="2" ry="2" />
<text  x="885.35" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (626,668 us., 10.67%)</title><rect x="52.2" y="181" width="125.9" height="15.0" fill="rgb(215,165,9)" rx="2" ry="2" />
<text  x="55.18" y="191.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (499,241 us., 8.50%)</title><rect x="781.7" y="133" width="100.3" height="15.0" fill="rgb(217,60,6)" rx="2" ry="2" />
<text  x="784.74" y="143.5" >transformers..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (206,462 us., 3.52%)</title><rect x="10.0" y="213" width="41.5" height="15.0" fill="rgb(235,103,51)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (798 us., 0.01%)</title><rect x="882.1" y="213" width="0.2" height="15.0" fill="rgb(217,182,17)" rx="2" ry="2" />
<text  x="885.13" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (116,780 us., 1.99%)</title><rect x="734.9" y="37" width="23.4" height="15.0" fill="rgb(225,142,40)" rx="2" ry="2" />
<text  x="737.88" y="47.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f34229619c0&gt; (798 us., 0.01%)</title><rect x="882.1" y="261" width="0.2" height="15.0" fill="rgb(245,24,35)" rx="2" ry="2" />
<text  x="885.13" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (147,164 us., 2.51%)</title><rect x="281.5" y="101" width="29.6" height="15.0" fill="rgb(208,176,51)" rx="2" ry="2" />
<text  x="284.52" y="111.5" >nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,526,231 us., 25.99%)</title><rect x="883.2" y="213" width="306.7" height="15.0" fill="rgb(224,156,50)" rx="2" ry="2" />
<text  x="886.21" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (798 us., 0.01%)</title><rect x="882.1" y="181" width="0.2" height="15.0" fill="rgb(242,35,36)" rx="2" ry="2" />
<text  x="885.13" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (147,164 us., 2.51%)</title><rect x="281.5" y="229" width="29.6" height="15.0" fill="rgb(222,63,13)" rx="2" ry="2" />
<text  x="284.52" y="239.5" >to..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (501,290 us., 8.54%)</title><rect x="179.2" y="245" width="100.8" height="15.0" fill="rgb(212,192,24)" rx="2" ry="2" />
<text  x="182.23" y="255.5" >torch/nn/fun..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (501,290 us., 8.54%)</title><rect x="179.2" y="213" width="100.8" height="15.0" fill="rgb(216,157,44)" rx="2" ry="2" />
<text  x="182.23" y="223.5" >torch/autogr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,973,476 us., 33.61%)</title><rect x="311.1" y="165" width="396.5" height="15.0" fill="rgb(212,150,29)" rx="2" ry="2" />
<text  x="314.09" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
</g>
</svg>
