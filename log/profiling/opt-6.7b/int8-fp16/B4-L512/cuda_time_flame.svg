<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,658 us., 0.01%)</title><rect x="54.4" y="245" width="0.2" height="15.0" fill="rgb(225,229,42)" rx="2" ry="2" />
<text  x="57.43" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (3,835,771 us., 25.21%)</title><rect x="892.5" y="245" width="297.5" height="15.0" fill="rgb(246,169,29)" rx="2" ry="2" />
<text  x="895.49" y="255.5" >torch/autograd/grad_mode.py(24):_decorat..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (4,945,494 us., 32.50%)</title><rect x="345.7" y="229" width="383.5" height="15.0" fill="rgb(253,67,12)" rx="2" ry="2" />
<text  x="348.69" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (408,355 us., 2.68%)</title><rect x="314.0" y="85" width="31.7" height="15.0" fill="rgb(241,217,40)" rx="2" ry="2" />
<text  x="317.02" y="95.5" >pr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (7,357 us., 0.05%)</title><rect x="729.4" y="181" width="0.6" height="15.0" fill="rgb(248,101,42)" rx="2" ry="2" />
<text  x="732.41" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (408,355 us., 2.68%)</title><rect x="314.0" y="101" width="31.7" height="15.0" fill="rgb(221,215,37)" rx="2" ry="2" />
<text  x="317.02" y="111.5" >nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (2,039,417 us., 13.40%)</title><rect x="54.6" y="197" width="158.1" height="15.0" fill="rgb(218,48,34)" rx="2" ry="2" />
<text  x="57.56" y="207.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f53a31859c0&gt; (17,005 us., 0.11%)</title><rect x="212.7" y="261" width="1.3" height="15.0" fill="rgb(205,67,21)" rx="2" ry="2" />
<text  x="215.72" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,658 us., 0.01%)</title><rect x="54.4" y="181" width="0.2" height="15.0" fill="rgb(226,65,28)" rx="2" ry="2" />
<text  x="57.43" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (408,355 us., 2.68%)</title><rect x="314.0" y="149" width="31.7" height="15.0" fill="rgb(218,129,15)" rx="2" ry="2" />
<text  x="317.02" y="159.5" >to..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (160,127 us., 1.05%)</title><rect x="742.0" y="85" width="12.4" height="15.0" fill="rgb(236,216,50)" rx="2" ry="2" />
<text  x="744.99" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,211 us., 0.05%)</title><rect x="312.0" y="197" width="0.6" height="15.0" fill="rgb(224,208,6)" rx="2" ry="2" />
<text  x="314.99" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (563,404 us., 3.70%)</title><rect x="10.0" y="213" width="43.7" height="15.0" fill="rgb(228,89,1)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >tran..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,658 us., 0.01%)</title><rect x="54.4" y="229" width="0.2" height="15.0" fill="rgb(253,138,35)" rx="2" ry="2" />
<text  x="57.43" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f52aec7b450&gt; (6,645,660 us., 43.68%)</title><rect x="214.0" y="261" width="515.4" height="15.0" fill="rgb(245,225,38)" rx="2" ry="2" />
<text  x="217.04" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f52aec7b450&gt;</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (231,338 us., 1.52%)</title><rect x="754.4" y="117" width="17.9" height="15.0" fill="rgb(249,125,52)" rx="2" ry="2" />
<text  x="757.41" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,263,085 us., 8.30%)</title><rect x="214.0" y="165" width="98.0" height="15.0" fill="rgb(214,155,50)" rx="2" ry="2" />
<text  x="217.04" y="175.5" >nn.Module:_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (160,127 us., 1.05%)</title><rect x="742.0" y="117" width="12.4" height="15.0" fill="rgb(221,221,36)" rx="2" ry="2" />
<text  x="744.99" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (12,860 us., 0.08%)</title><rect x="891.5" y="261" width="1.0" height="15.0" fill="rgb(210,173,37)" rx="2" ry="2" />
<text  x="894.49" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,658 us., 0.01%)</title><rect x="54.4" y="133" width="0.2" height="15.0" fill="rgb(246,29,28)" rx="2" ry="2" />
<text  x="57.43" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,945,494 us., 32.50%)</title><rect x="345.7" y="117" width="383.5" height="15.0" fill="rgb(225,4,45)" rx="2" ry="2" />
<text  x="348.69" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,262,192 us., 8.30%)</title><rect x="793.3" y="165" width="97.9" height="15.0" fill="rgb(237,195,16)" rx="2" ry="2" />
<text  x="796.32" y="175.5" >torch_int/n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,263,085 us., 8.30%)</title><rect x="214.0" y="69" width="98.0" height="15.0" fill="rgb(243,59,7)" rx="2" ry="2" />
<text  x="217.04" y="79.5" >torch/autog..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (408,355 us., 2.68%)</title><rect x="314.0" y="213" width="31.7" height="15.0" fill="rgb(254,99,27)" rx="2" ry="2" />
<text  x="317.02" y="223.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (563,404 us., 3.70%)</title><rect x="10.0" y="165" width="43.7" height="15.0" fill="rgb(246,67,53)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torc..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (154,839 us., 1.02%)</title><rect x="730.0" y="149" width="12.0" height="15.0" fill="rgb(253,145,21)" rx="2" ry="2" />
<text  x="732.98" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (12,860 us., 0.08%)</title><rect x="891.5" y="245" width="1.0" height="15.0" fill="rgb(239,126,24)" rx="2" ry="2" />
<text  x="894.49" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,263,085 us., 8.30%)</title><rect x="214.0" y="133" width="98.0" height="15.0" fill="rgb(206,95,47)" rx="2" ry="2" />
<text  x="217.04" y="143.5" >nn.Module:_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,262,192 us., 8.30%)</title><rect x="793.3" y="197" width="97.9" height="15.0" fill="rgb(245,46,29)" rx="2" ry="2" />
<text  x="796.32" y="207.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (3,835,771 us., 25.21%)</title><rect x="892.5" y="197" width="297.5" height="15.0" fill="rgb(235,122,22)" rx="2" ry="2" />
<text  x="895.49" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,637 us., 0.06%)</title><rect x="212.7" y="117" width="0.7" height="15.0" fill="rgb(245,198,20)" rx="2" ry="2" />
<text  x="215.72" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (18,034 us., 0.12%)</title><rect x="312.6" y="229" width="1.4" height="15.0" fill="rgb(239,26,27)" rx="2" ry="2" />
<text  x="315.63" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,461 us., 0.02%)</title><rect x="891.2" y="197" width="0.2" height="15.0" fill="rgb(214,115,26)" rx="2" ry="2" />
<text  x="894.25" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,368 us., 0.05%)</title><rect x="213.4" y="181" width="0.6" height="15.0" fill="rgb(249,129,45)" rx="2" ry="2" />
<text  x="216.39" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,835,771 us., 25.21%)</title><rect x="892.5" y="133" width="297.5" height="15.0" fill="rgb(213,212,49)" rx="2" ry="2" />
<text  x="895.49" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (2,179 us., 0.01%)</title><rect x="729.2" y="229" width="0.2" height="15.0" fill="rgb(212,123,1)" rx="2" ry="2" />
<text  x="732.24" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,262,192 us., 8.30%)</title><rect x="793.3" y="245" width="97.9" height="15.0" fill="rgb(224,49,1)" rx="2" ry="2" />
<text  x="796.32" y="255.5" >torch_int/n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,263,085 us., 8.30%)</title><rect x="214.0" y="181" width="98.0" height="15.0" fill="rgb(211,48,3)" rx="2" ry="2" />
<text  x="217.04" y="191.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,945,494 us., 32.50%)</title><rect x="345.7" y="149" width="383.5" height="15.0" fill="rgb(205,39,34)" rx="2" ry="2" />
<text  x="348.69" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,211 us., 0.05%)</title><rect x="312.0" y="149" width="0.6" height="15.0" fill="rgb(207,204,35)" rx="2" ry="2" />
<text  x="314.99" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (154,839 us., 1.02%)</title><rect x="730.0" y="197" width="12.0" height="15.0" fill="rgb(219,60,45)" rx="2" ry="2" />
<text  x="732.98" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f53a31859c0&gt; (1,658 us., 0.01%)</title><rect x="54.4" y="261" width="0.2" height="15.0" fill="rgb(229,114,7)" rx="2" ry="2" />
<text  x="57.43" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,658 us., 0.01%)</title><rect x="54.4" y="165" width="0.2" height="15.0" fill="rgb(247,149,49)" rx="2" ry="2" />
<text  x="57.43" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (18,034 us., 0.12%)</title><rect x="312.6" y="213" width="1.4" height="15.0" fill="rgb(251,42,43)" rx="2" ry="2" />
<text  x="315.63" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,262,192 us., 8.30%)</title><rect x="793.3" y="117" width="97.9" height="15.0" fill="rgb(211,170,50)" rx="2" ry="2" />
<text  x="796.32" y="127.5" >nn.Module:_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (231,338 us., 1.52%)</title><rect x="754.4" y="181" width="17.9" height="15.0" fill="rgb(222,84,40)" rx="2" ry="2" />
<text  x="757.41" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,357 us., 0.05%)</title><rect x="729.4" y="117" width="0.6" height="15.0" fill="rgb(224,60,35)" rx="2" ry="2" />
<text  x="732.41" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,263,085 us., 8.30%)</title><rect x="214.0" y="197" width="98.0" height="15.0" fill="rgb(230,135,26)" rx="2" ry="2" />
<text  x="217.04" y="207.5" >nn.Module:_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (12,860 us., 0.08%)</title><rect x="891.5" y="229" width="1.0" height="15.0" fill="rgb(222,77,30)" rx="2" ry="2" />
<text  x="894.49" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,179 us., 0.01%)</title><rect x="729.2" y="149" width="0.2" height="15.0" fill="rgb(223,26,49)" rx="2" ry="2" />
<text  x="732.24" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (4,945,494 us., 32.50%)</title><rect x="345.7" y="181" width="383.5" height="15.0" fill="rgb(218,11,30)" rx="2" ry="2" />
<text  x="348.69" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (231,338 us., 1.52%)</title><rect x="754.4" y="85" width="17.9" height="15.0" fill="rgb(249,57,11)" rx="2" ry="2" />
<text  x="757.41" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (7,357 us., 0.05%)</title><rect x="729.4" y="197" width="0.6" height="15.0" fill="rgb(207,108,11)" rx="2" ry="2" />
<text  x="732.41" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,637 us., 0.06%)</title><rect x="212.7" y="181" width="0.7" height="15.0" fill="rgb(205,107,1)" rx="2" ry="2" />
<text  x="215.72" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,179 us., 0.01%)</title><rect x="729.2" y="213" width="0.2" height="15.0" fill="rgb(245,214,13)" rx="2" ry="2" />
<text  x="732.24" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,211 us., 0.05%)</title><rect x="312.0" y="165" width="0.6" height="15.0" fill="rgb(245,17,49)" rx="2" ry="2" />
<text  x="314.99" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (270,504 us., 1.78%)</title><rect x="772.3" y="197" width="21.0" height="15.0" fill="rgb(227,28,19)" rx="2" ry="2" />
<text  x="775.35" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,039,417 us., 13.40%)</title><rect x="54.6" y="85" width="158.1" height="15.0" fill="rgb(228,176,49)" rx="2" ry="2" />
<text  x="57.56" y="95.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,835,771 us., 25.21%)</title><rect x="892.5" y="165" width="297.5" height="15.0" fill="rgb(238,144,41)" rx="2" ry="2" />
<text  x="895.49" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,658 us., 0.01%)</title><rect x="54.4" y="149" width="0.2" height="15.0" fill="rgb(207,201,33)" rx="2" ry="2" />
<text  x="57.43" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,945,494 us., 32.50%)</title><rect x="345.7" y="165" width="383.5" height="15.0" fill="rgb(205,167,10)" rx="2" ry="2" />
<text  x="348.69" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (563,404 us., 3.70%)</title><rect x="10.0" y="245" width="43.7" height="15.0" fill="rgb(207,95,25)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torc..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f53a31859c0&gt; (7,357 us., 0.05%)</title><rect x="729.4" y="261" width="0.6" height="15.0" fill="rgb(254,78,45)" rx="2" ry="2" />
<text  x="732.41" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (270,504 us., 1.78%)</title><rect x="772.3" y="213" width="21.0" height="15.0" fill="rgb(247,194,21)" rx="2" ry="2" />
<text  x="775.35" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (2,039,417 us., 13.40%)</title><rect x="54.6" y="181" width="158.1" height="15.0" fill="rgb(251,105,36)" rx="2" ry="2" />
<text  x="57.56" y="191.5" >nn.Module:_Int8OPTDe..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,368 us., 0.05%)</title><rect x="213.4" y="101" width="0.6" height="15.0" fill="rgb(213,115,36)" rx="2" ry="2" />
<text  x="216.39" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (160,127 us., 1.05%)</title><rect x="742.0" y="181" width="12.4" height="15.0" fill="rgb(208,114,32)" rx="2" ry="2" />
<text  x="744.99" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (270,504 us., 1.78%)</title><rect x="772.3" y="165" width="21.0" height="15.0" fill="rgb(228,222,24)" rx="2" ry="2" />
<text  x="775.35" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (314,966 us., 2.07%)</title><rect x="730.0" y="245" width="24.4" height="15.0" fill="rgb(254,28,11)" rx="2" ry="2" />
<text  x="732.98" y="255.5" >t..</text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (2,039,417 us., 13.40%)</title><rect x="54.6" y="245" width="158.1" height="15.0" fill="rgb(236,212,22)" rx="2" ry="2" />
<text  x="57.56" y="255.5" >torch_int/functional..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (7,357 us., 0.05%)</title><rect x="729.4" y="149" width="0.6" height="15.0" fill="rgb(208,192,16)" rx="2" ry="2" />
<text  x="732.41" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (270,504 us., 1.78%)</title><rect x="772.3" y="149" width="21.0" height="15.0" fill="rgb(217,65,8)" rx="2" ry="2" />
<text  x="775.35" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (154,839 us., 1.02%)</title><rect x="730.0" y="117" width="12.0" height="15.0" fill="rgb(253,204,26)" rx="2" ry="2" />
<text  x="732.98" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (9,531 us., 0.06%)</title><rect x="53.7" y="229" width="0.7" height="15.0" fill="rgb(251,0,23)" rx="2" ry="2" />
<text  x="56.69" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (231,338 us., 1.52%)</title><rect x="754.4" y="149" width="17.9" height="15.0" fill="rgb(221,44,53)" rx="2" ry="2" />
<text  x="757.41" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (3,835,771 us., 25.21%)</title><rect x="892.5" y="213" width="297.5" height="15.0" fill="rgb(245,175,7)" rx="2" ry="2" />
<text  x="895.49" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (160,127 us., 1.05%)</title><rect x="742.0" y="165" width="12.4" height="15.0" fill="rgb(208,226,2)" rx="2" ry="2" />
<text  x="744.99" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (231,338 us., 1.52%)</title><rect x="754.4" y="69" width="17.9" height="15.0" fill="rgb(243,8,40)" rx="2" ry="2" />
<text  x="757.41" y="79.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (160,127 us., 1.05%)</title><rect x="742.0" y="53" width="12.4" height="15.0" fill="rgb(227,171,45)" rx="2" ry="2" />
<text  x="744.99" y="63.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,262,192 us., 8.30%)</title><rect x="793.3" y="85" width="97.9" height="15.0" fill="rgb(224,174,34)" rx="2" ry="2" />
<text  x="796.32" y="95.5" >torch/autog..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (154,839 us., 1.02%)</title><rect x="730.0" y="165" width="12.0" height="15.0" fill="rgb(249,29,54)" rx="2" ry="2" />
<text  x="732.98" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (7,357 us., 0.05%)</title><rect x="729.4" y="213" width="0.6" height="15.0" fill="rgb(221,41,40)" rx="2" ry="2" />
<text  x="732.41" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (270,504 us., 1.78%)</title><rect x="772.3" y="85" width="21.0" height="15.0" fill="rgb(216,119,41)" rx="2" ry="2" />
<text  x="775.35" y="95.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (563,404 us., 3.70%)</title><rect x="10.0" y="261" width="43.7" height="15.0" fill="rgb(231,10,32)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;bui..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (314,966 us., 2.07%)</title><rect x="730.0" y="229" width="24.4" height="15.0" fill="rgb(253,49,24)" rx="2" ry="2" />
<text  x="732.98" y="239.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,637 us., 0.06%)</title><rect x="212.7" y="165" width="0.7" height="15.0" fill="rgb(210,28,14)" rx="2" ry="2" />
<text  x="215.72" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (3,835,771 us., 25.21%)</title><rect x="892.5" y="229" width="297.5" height="15.0" fill="rgb(226,128,42)" rx="2" ry="2" />
<text  x="895.49" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (12,860 us., 0.08%)</title><rect x="891.5" y="181" width="1.0" height="15.0" fill="rgb(214,34,21)" rx="2" ry="2" />
<text  x="894.49" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (563,404 us., 3.70%)</title><rect x="10.0" y="229" width="43.7" height="15.0" fill="rgb(229,185,11)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.M..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (9,531 us., 0.06%)</title><rect x="53.7" y="245" width="0.7" height="15.0" fill="rgb(250,61,38)" rx="2" ry="2" />
<text  x="56.69" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,835,771 us., 25.21%)</title><rect x="892.5" y="149" width="297.5" height="15.0" fill="rgb(238,42,43)" rx="2" ry="2" />
<text  x="895.49" y="159.5" >transformers/models/opt/modeling_opt.py(..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (231,338 us., 1.52%)</title><rect x="754.4" y="229" width="17.9" height="15.0" fill="rgb(215,45,48)" rx="2" ry="2" />
<text  x="757.41" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (563,404 us., 3.70%)</title><rect x="10.0" y="197" width="43.7" height="15.0" fill="rgb(211,138,8)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,461 us., 0.02%)</title><rect x="891.2" y="229" width="0.2" height="15.0" fill="rgb(250,151,9)" rx="2" ry="2" />
<text  x="894.25" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,039,417 us., 13.40%)</title><rect x="54.6" y="149" width="158.1" height="15.0" fill="rgb(241,26,33)" rx="2" ry="2" />
<text  x="57.56" y="159.5" >nn.Module:_Int8OPTDe..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,262,192 us., 8.30%)</title><rect x="793.3" y="213" width="97.9" height="15.0" fill="rgb(250,146,53)" rx="2" ry="2" />
<text  x="796.32" y="223.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_Embedding (8,637 us., 0.06%)</title><rect x="212.7" y="213" width="0.7" height="15.0" fill="rgb(229,86,16)" rx="2" ry="2" />
<text  x="215.72" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (9,531 us., 0.06%)</title><rect x="53.7" y="181" width="0.7" height="15.0" fill="rgb(239,137,0)" rx="2" ry="2" />
<text  x="56.69" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (408,355 us., 2.68%)</title><rect x="314.0" y="69" width="31.7" height="15.0" fill="rgb(241,218,3)" rx="2" ry="2" />
<text  x="317.02" y="79.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (4,945,494 us., 32.50%)</title><rect x="345.7" y="245" width="383.5" height="15.0" fill="rgb(247,196,28)" rx="2" ry="2" />
<text  x="348.69" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (8,368 us., 0.05%)</title><rect x="213.4" y="213" width="0.6" height="15.0" fill="rgb(215,170,31)" rx="2" ry="2" />
<text  x="216.39" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,179 us., 0.01%)</title><rect x="729.2" y="181" width="0.2" height="15.0" fill="rgb(234,89,41)" rx="2" ry="2" />
<text  x="732.24" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f52ae618f30&gt; (2,039,417 us., 13.40%)</title><rect x="54.6" y="261" width="158.1" height="15.0" fill="rgb(217,11,43)" rx="2" ry="2" />
<text  x="57.56" y="271.5" >&lt;built-in_method_dq_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,637 us., 0.06%)</title><rect x="212.7" y="149" width="0.7" height="15.0" fill="rgb(214,150,0)" rx="2" ry="2" />
<text  x="215.72" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (3,835,771 us., 25.21%)</title><rect x="892.5" y="261" width="297.5" height="15.0" fill="rgb(216,206,53)" rx="2" ry="2" />
<text  x="895.49" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (17,005 us., 0.11%)</title><rect x="212.7" y="229" width="1.3" height="15.0" fill="rgb(238,87,51)" rx="2" ry="2" />
<text  x="215.72" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,835,771 us., 25.21%)</title><rect x="892.5" y="117" width="297.5" height="15.0" fill="rgb(206,223,2)" rx="2" ry="2" />
<text  x="895.49" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (160,127 us., 1.05%)</title><rect x="742.0" y="69" width="12.4" height="15.0" fill="rgb(235,84,11)" rx="2" ry="2" />
<text  x="744.99" y="79.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (9,531 us., 0.06%)</title><rect x="53.7" y="165" width="0.7" height="15.0" fill="rgb(230,156,33)" rx="2" ry="2" />
<text  x="56.69" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,263,085 us., 8.30%)</title><rect x="214.0" y="213" width="98.0" height="15.0" fill="rgb(232,124,6)" rx="2" ry="2" />
<text  x="217.04" y="223.5" >torch/autog..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (1,263,085 us., 8.30%)</title><rect x="214.0" y="245" width="98.0" height="15.0" fill="rgb(243,170,41)" rx="2" ry="2" />
<text  x="217.04" y="255.5" >torch/nn/fu..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (270,504 us., 1.78%)</title><rect x="772.3" y="101" width="21.0" height="15.0" fill="rgb(223,212,48)" rx="2" ry="2" />
<text  x="775.35" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,179 us., 0.01%)</title><rect x="729.2" y="133" width="0.2" height="15.0" fill="rgb(241,130,40)" rx="2" ry="2" />
<text  x="732.24" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (408,355 us., 2.68%)</title><rect x="314.0" y="117" width="31.7" height="15.0" fill="rgb(205,125,0)" rx="2" ry="2" />
<text  x="317.02" y="127.5" >tr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (18,034 us., 0.12%)</title><rect x="312.6" y="165" width="1.4" height="15.0" fill="rgb(213,14,43)" rx="2" ry="2" />
<text  x="315.63" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (12,860 us., 0.08%)</title><rect x="891.5" y="213" width="1.0" height="15.0" fill="rgb(222,96,26)" rx="2" ry="2" />
<text  x="894.49" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f53a31859c0&gt; (1,262,192 us., 8.30%)</title><rect x="793.3" y="261" width="97.9" height="15.0" fill="rgb(223,209,26)" rx="2" ry="2" />
<text  x="796.32" y="271.5" >&lt;built-in_m..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,945,494 us., 32.50%)</title><rect x="345.7" y="133" width="383.5" height="15.0" fill="rgb(235,75,50)" rx="2" ry="2" />
<text  x="348.69" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,461 us., 0.02%)</title><rect x="891.2" y="213" width="0.2" height="15.0" fill="rgb(223,174,21)" rx="2" ry="2" />
<text  x="894.25" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (160,127 us., 1.05%)</title><rect x="742.0" y="101" width="12.4" height="15.0" fill="rgb(248,31,46)" rx="2" ry="2" />
<text  x="744.99" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,263,085 us., 8.30%)</title><rect x="214.0" y="149" width="98.0" height="15.0" fill="rgb(230,25,10)" rx="2" ry="2" />
<text  x="217.04" y="159.5" >torch_int/n..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (17,005 us., 0.11%)</title><rect x="212.7" y="245" width="1.3" height="15.0" fill="rgb(215,192,46)" rx="2" ry="2" />
<text  x="215.72" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,658 us., 0.01%)</title><rect x="54.4" y="197" width="0.2" height="15.0" fill="rgb(248,88,31)" rx="2" ry="2" />
<text  x="57.43" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (18,034 us., 0.12%)</title><rect x="312.6" y="181" width="1.4" height="15.0" fill="rgb(234,74,41)" rx="2" ry="2" />
<text  x="315.63" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (270,504 us., 1.78%)</title><rect x="772.3" y="181" width="21.0" height="15.0" fill="rgb(217,172,32)" rx="2" ry="2" />
<text  x="775.35" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (408,355 us., 2.68%)</title><rect x="314.0" y="197" width="31.7" height="15.0" fill="rgb(240,55,35)" rx="2" ry="2" />
<text  x="317.02" y="207.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,945,494 us., 32.50%)</title><rect x="345.7" y="101" width="383.5" height="15.0" fill="rgb(205,129,3)" rx="2" ry="2" />
<text  x="348.69" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (18,034 us., 0.12%)</title><rect x="312.6" y="197" width="1.4" height="15.0" fill="rgb(223,156,27)" rx="2" ry="2" />
<text  x="315.63" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (408,355 us., 2.68%)</title><rect x="314.0" y="133" width="31.7" height="15.0" fill="rgb(242,188,23)" rx="2" ry="2" />
<text  x="317.02" y="143.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,039,417 us., 13.40%)</title><rect x="54.6" y="101" width="158.1" height="15.0" fill="rgb(209,93,10)" rx="2" ry="2" />
<text  x="57.56" y="111.5" >profiling/utils.py(1..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,211 us., 0.05%)</title><rect x="312.0" y="181" width="0.6" height="15.0" fill="rgb(215,21,40)" rx="2" ry="2" />
<text  x="314.99" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,263,085 us., 8.30%)</title><rect x="214.0" y="101" width="98.0" height="15.0" fill="rgb(233,88,21)" rx="2" ry="2" />
<text  x="217.04" y="111.5" >nn.Module:_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (12,860 us., 0.08%)</title><rect x="891.5" y="197" width="1.0" height="15.0" fill="rgb(232,17,35)" rx="2" ry="2" />
<text  x="894.49" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,368 us., 0.05%)</title><rect x="213.4" y="117" width="0.6" height="15.0" fill="rgb(253,67,9)" rx="2" ry="2" />
<text  x="216.39" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (4,945,494 us., 32.50%)</title><rect x="345.7" y="197" width="383.5" height="15.0" fill="rgb(208,2,19)" rx="2" ry="2" />
<text  x="348.69" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (231,338 us., 1.52%)</title><rect x="754.4" y="37" width="17.9" height="15.0" fill="rgb(208,227,37)" rx="2" ry="2" />
<text  x="757.41" y="47.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,461 us., 0.02%)</title><rect x="891.2" y="245" width="0.2" height="15.0" fill="rgb(215,167,5)" rx="2" ry="2" />
<text  x="894.25" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (154,839 us., 1.02%)</title><rect x="730.0" y="85" width="12.0" height="15.0" fill="rgb(227,99,41)" rx="2" ry="2" />
<text  x="732.98" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (270,504 us., 1.78%)</title><rect x="772.3" y="133" width="21.0" height="15.0" fill="rgb(242,53,23)" rx="2" ry="2" />
<text  x="775.35" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,263,085 us., 8.30%)</title><rect x="214.0" y="85" width="98.0" height="15.0" fill="rgb(213,117,11)" rx="2" ry="2" />
<text  x="217.04" y="95.5" >profiling/u..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (9,531 us., 0.06%)</title><rect x="53.7" y="213" width="0.7" height="15.0" fill="rgb(213,56,45)" rx="2" ry="2" />
<text  x="56.69" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f53a31859c0&gt; (2,461 us., 0.02%)</title><rect x="891.2" y="261" width="0.2" height="15.0" fill="rgb(242,215,50)" rx="2" ry="2" />
<text  x="894.25" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,262,192 us., 8.30%)</title><rect x="793.3" y="149" width="97.9" height="15.0" fill="rgb(209,209,42)" rx="2" ry="2" />
<text  x="796.32" y="159.5" >nn.Module:_..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (7,357 us., 0.05%)</title><rect x="729.4" y="229" width="0.6" height="15.0" fill="rgb(228,172,9)" rx="2" ry="2" />
<text  x="732.41" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,039,417 us., 13.40%)</title><rect x="54.6" y="133" width="158.1" height="15.0" fill="rgb(231,81,46)" rx="2" ry="2" />
<text  x="57.56" y="143.5" >transformers/models/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,262,192 us., 8.30%)</title><rect x="793.3" y="101" width="97.9" height="15.0" fill="rgb(246,113,13)" rx="2" ry="2" />
<text  x="796.32" y="111.5" >profiling/u..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (154,839 us., 1.02%)</title><rect x="730.0" y="181" width="12.0" height="15.0" fill="rgb(238,13,21)" rx="2" ry="2" />
<text  x="732.98" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,637 us., 0.06%)</title><rect x="212.7" y="133" width="0.7" height="15.0" fill="rgb(214,182,16)" rx="2" ry="2" />
<text  x="215.72" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,039,417 us., 13.40%)</title><rect x="54.6" y="165" width="158.1" height="15.0" fill="rgb(238,91,32)" rx="2" ry="2" />
<text  x="57.56" y="175.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (231,338 us., 1.52%)</title><rect x="754.4" y="213" width="17.9" height="15.0" fill="rgb(249,35,44)" rx="2" ry="2" />
<text  x="757.41" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (231,338 us., 1.52%)</title><rect x="754.4" y="245" width="17.9" height="15.0" fill="rgb(224,120,51)" rx="2" ry="2" />
<text  x="757.41" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,461 us., 0.02%)</title><rect x="891.2" y="181" width="0.2" height="15.0" fill="rgb(240,5,46)" rx="2" ry="2" />
<text  x="894.25" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,658 us., 0.01%)</title><rect x="54.4" y="213" width="0.2" height="15.0" fill="rgb(234,184,6)" rx="2" ry="2" />
<text  x="57.43" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (270,504 us., 1.78%)</title><rect x="772.3" y="117" width="21.0" height="15.0" fill="rgb(249,221,7)" rx="2" ry="2" />
<text  x="775.35" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (231,338 us., 1.52%)</title><rect x="754.4" y="53" width="17.9" height="15.0" fill="rgb(223,160,49)" rx="2" ry="2" />
<text  x="757.41" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,368 us., 0.05%)</title><rect x="213.4" y="149" width="0.6" height="15.0" fill="rgb(220,91,32)" rx="2" ry="2" />
<text  x="216.39" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (154,839 us., 1.02%)</title><rect x="730.0" y="133" width="12.0" height="15.0" fill="rgb(254,148,36)" rx="2" ry="2" />
<text  x="732.98" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (314,966 us., 2.07%)</title><rect x="730.0" y="213" width="24.4" height="15.0" fill="rgb(221,1,14)" rx="2" ry="2" />
<text  x="732.98" y="223.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,357 us., 0.05%)</title><rect x="729.4" y="133" width="0.6" height="15.0" fill="rgb(220,146,53)" rx="2" ry="2" />
<text  x="732.41" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (4,945,494 us., 32.50%)</title><rect x="345.7" y="213" width="383.5" height="15.0" fill="rgb(225,142,18)" rx="2" ry="2" />
<text  x="348.69" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,263,085 us., 8.30%)</title><rect x="214.0" y="229" width="98.0" height="15.0" fill="rgb(223,56,21)" rx="2" ry="2" />
<text  x="217.04" y="239.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (160,127 us., 1.05%)</title><rect x="742.0" y="133" width="12.4" height="15.0" fill="rgb(247,6,41)" rx="2" ry="2" />
<text  x="744.99" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,179 us., 0.01%)</title><rect x="729.2" y="165" width="0.2" height="15.0" fill="rgb(228,208,27)" rx="2" ry="2" />
<text  x="732.24" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (2,179 us., 0.01%)</title><rect x="729.2" y="245" width="0.2" height="15.0" fill="rgb(223,48,2)" rx="2" ry="2" />
<text  x="732.24" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (408,355 us., 2.68%)</title><rect x="314.0" y="181" width="31.7" height="15.0" fill="rgb(228,102,17)" rx="2" ry="2" />
<text  x="317.02" y="191.5" >to..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,263,085 us., 8.30%)</title><rect x="214.0" y="117" width="98.0" height="15.0" fill="rgb(233,202,24)" rx="2" ry="2" />
<text  x="217.04" y="127.5" >transformer..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,039,417 us., 13.40%)</title><rect x="54.6" y="117" width="158.1" height="15.0" fill="rgb(244,83,7)" rx="2" ry="2" />
<text  x="57.56" y="127.5" >nn.Module:_Int8OPTFo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (231,338 us., 1.52%)</title><rect x="754.4" y="101" width="17.9" height="15.0" fill="rgb(251,154,33)" rx="2" ry="2" />
<text  x="757.41" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (231,338 us., 1.52%)</title><rect x="754.4" y="165" width="17.9" height="15.0" fill="rgb(248,149,43)" rx="2" ry="2" />
<text  x="757.41" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,945,494 us., 32.50%)</title><rect x="345.7" y="85" width="383.5" height="15.0" fill="rgb(247,150,48)" rx="2" ry="2" />
<text  x="348.69" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,637 us., 0.06%)</title><rect x="212.7" y="197" width="0.7" height="15.0" fill="rgb(227,67,46)" rx="2" ry="2" />
<text  x="215.72" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (408,355 us., 2.68%)</title><rect x="314.0" y="229" width="31.7" height="15.0" fill="rgb(227,209,37)" rx="2" ry="2" />
<text  x="317.02" y="239.5" >to..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (154,839 us., 1.02%)</title><rect x="730.0" y="101" width="12.0" height="15.0" fill="rgb(205,44,14)" rx="2" ry="2" />
<text  x="732.98" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,211 us., 0.05%)</title><rect x="312.0" y="213" width="0.6" height="15.0" fill="rgb(229,134,51)" rx="2" ry="2" />
<text  x="314.99" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (160,127 us., 1.05%)</title><rect x="742.0" y="149" width="12.4" height="15.0" fill="rgb(218,118,33)" rx="2" ry="2" />
<text  x="744.99" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (160,127 us., 1.05%)</title><rect x="742.0" y="37" width="12.4" height="15.0" fill="rgb(249,70,19)" rx="2" ry="2" />
<text  x="744.99" y="47.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (563,404 us., 3.70%)</title><rect x="10.0" y="181" width="43.7" height="15.0" fill="rgb(239,65,17)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >prof..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (9,531 us., 0.06%)</title><rect x="53.7" y="197" width="0.7" height="15.0" fill="rgb(229,100,50)" rx="2" ry="2" />
<text  x="56.69" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (270,504 us., 1.78%)</title><rect x="772.3" y="245" width="21.0" height="15.0" fill="rgb(249,50,7)" rx="2" ry="2" />
<text  x="775.35" y="255.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (7,357 us., 0.05%)</title><rect x="729.4" y="245" width="0.6" height="15.0" fill="rgb(219,47,11)" rx="2" ry="2" />
<text  x="732.41" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (231,338 us., 1.52%)</title><rect x="754.4" y="197" width="17.9" height="15.0" fill="rgb(245,69,39)" rx="2" ry="2" />
<text  x="757.41" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (2,039,417 us., 13.40%)</title><rect x="54.6" y="229" width="158.1" height="15.0" fill="rgb(211,172,1)" rx="2" ry="2" />
<text  x="57.56" y="239.5" >torch_int/nn/fused.p..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,461 us., 0.02%)</title><rect x="891.2" y="165" width="0.2" height="15.0" fill="rgb(224,196,22)" rx="2" ry="2" />
<text  x="894.25" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,262,192 us., 8.30%)</title><rect x="793.3" y="181" width="97.9" height="15.0" fill="rgb(254,112,25)" rx="2" ry="2" />
<text  x="796.32" y="191.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (2,039,417 us., 13.40%)</title><rect x="54.6" y="213" width="158.1" height="15.0" fill="rgb(213,181,16)" rx="2" ry="2" />
<text  x="57.56" y="223.5" >nn.Module:_DQ_Add_La..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (8,211 us., 0.05%)</title><rect x="312.0" y="245" width="0.6" height="15.0" fill="rgb(244,15,6)" rx="2" ry="2" />
<text  x="314.99" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (270,504 us., 1.78%)</title><rect x="772.3" y="229" width="21.0" height="15.0" fill="rgb(245,31,34)" rx="2" ry="2" />
<text  x="775.35" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (18,034 us., 0.12%)</title><rect x="312.6" y="245" width="1.4" height="15.0" fill="rgb(239,147,17)" rx="2" ry="2" />
<text  x="315.63" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,357 us., 0.05%)</title><rect x="729.4" y="165" width="0.6" height="15.0" fill="rgb(207,59,39)" rx="2" ry="2" />
<text  x="732.41" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (231,338 us., 1.52%)</title><rect x="754.4" y="133" width="17.9" height="15.0" fill="rgb(243,210,27)" rx="2" ry="2" />
<text  x="757.41" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,835,771 us., 25.21%)</title><rect x="892.5" y="181" width="297.5" height="15.0" fill="rgb(251,29,10)" rx="2" ry="2" />
<text  x="895.49" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>all (15,215,913 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(233,210,51)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f53a31859c0&gt; (9,531 us., 0.06%)</title><rect x="53.7" y="261" width="0.7" height="15.0" fill="rgb(239,190,5)" rx="2" ry="2" />
<text  x="56.69" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (408,355 us., 2.68%)</title><rect x="314.0" y="245" width="31.7" height="15.0" fill="rgb(241,221,4)" rx="2" ry="2" />
<text  x="317.02" y="255.5" >to..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f52ae618f00&gt; (231,338 us., 1.52%)</title><rect x="754.4" y="261" width="17.9" height="15.0" fill="rgb(253,195,16)" rx="2" ry="2" />
<text  x="757.41" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,262,192 us., 8.30%)</title><rect x="793.3" y="133" width="97.9" height="15.0" fill="rgb(243,42,54)" rx="2" ry="2" />
<text  x="796.32" y="143.5" >transformer..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f52ae618ed0&gt; (314,966 us., 2.07%)</title><rect x="730.0" y="261" width="24.4" height="15.0" fill="rgb(251,178,8)" rx="2" ry="2" />
<text  x="732.98" y="271.5" >&lt;..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (408,355 us., 2.68%)</title><rect x="314.0" y="165" width="31.7" height="15.0" fill="rgb(245,49,52)" rx="2" ry="2" />
<text  x="317.02" y="175.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,368 us., 0.05%)</title><rect x="213.4" y="133" width="0.6" height="15.0" fill="rgb(240,59,1)" rx="2" ry="2" />
<text  x="216.39" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,368 us., 0.05%)</title><rect x="213.4" y="165" width="0.6" height="15.0" fill="rgb(214,148,6)" rx="2" ry="2" />
<text  x="216.39" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f52ae618e70&gt; (270,504 us., 1.78%)</title><rect x="772.3" y="261" width="21.0" height="15.0" fill="rgb(249,180,11)" rx="2" ry="2" />
<text  x="775.35" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,179 us., 0.01%)</title><rect x="729.2" y="197" width="0.2" height="15.0" fill="rgb(250,164,28)" rx="2" ry="2" />
<text  x="732.24" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (160,127 us., 1.05%)</title><rect x="742.0" y="197" width="12.4" height="15.0" fill="rgb(207,157,34)" rx="2" ry="2" />
<text  x="744.99" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,835,771 us., 25.21%)</title><rect x="892.5" y="101" width="297.5" height="15.0" fill="rgb(234,50,37)" rx="2" ry="2" />
<text  x="895.49" y="111.5" >torch/autograd/grad_mode.py(27):_decorat..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,262,192 us., 8.30%)</title><rect x="793.3" y="229" width="97.9" height="15.0" fill="rgb(235,169,2)" rx="2" ry="2" />
<text  x="796.32" y="239.5" >torch/autog..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (8,368 us., 0.05%)</title><rect x="213.4" y="197" width="0.6" height="15.0" fill="rgb(234,183,9)" rx="2" ry="2" />
<text  x="216.39" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,211 us., 0.05%)</title><rect x="312.0" y="229" width="0.6" height="15.0" fill="rgb(225,127,14)" rx="2" ry="2" />
<text  x="314.99" y="239.5" ></text>
</g>
</g>
</svg>
